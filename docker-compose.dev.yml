version: "3"

services:
  server:
    container_name: discovery_server
    build:
      context: ./server
    working_dir: /src
    ports:
      - "8000:8000"
    volumes:
      - ./server:/src
      - run_vol:/var/run
      - cache_vol:/var/cache
      - tmp_vol:/tmp
    env_file:
      - .env.dev
    command: >
      sh -c "sh migrations.sh && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - localstack

  db:
    container_name: discovery_db
    image: postgres
    env_file:
      - .env.dev

  dockspawn:
    container_name: discovery_dockspawn
    build: ./dockspawn
    working_dir: /src
    ports:
      - "8080:8080"
    volumes:
      - ./dockspawn:/src
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env.dev
    command: >
      sh -c "go build -v -o bin/server && /src/bin/server"
    privileged: true

  localstack:
    container_name: discovery_localstack
    environment:
      # - DEBUG=1
      - AWS_ACCESS_KEY_ID=xyz
      - AWS_SECRET_ACCESS_KEY=aaa
      - AWS_DEFAULT_REGION=ap-south-1
      - DOCKER_HOST=unix:///var/run/docker.sock
    image: localstack/localstack
    ports:
      - "4566:4566"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.aws/buckets.sh:/etc/localstack/init/ready.d/buckets.sh
  
  client:
    container_name: discovery_client
    build: ./client
    stdin_open: true
    tty: true
    working_dir: /src
    ports:
      - "3000:3000"
    volumes:
      - ./client:/src
    env_file:
      - .env.dev
    command: >
      sh -c "npm install -g npm@latest && npm install && npm run dev"
    depends_on:
      - server
      - db

volumes:
  run_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  cache_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
